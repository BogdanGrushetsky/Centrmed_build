{"version":3,"file":"static/js/74.a1666218.chunk.js","mappings":"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","sources":["icons/rowbotton.svg","components/DateTimePicker/Day/Slot/Slot.jsx","components/DateTimePicker/Day/Day.jsx","components/DateTimePicker/DateTimePicker.jsx"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRowbotton(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    stroke: \"black\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L6 6L11 1\",\n    strokeWidth: 1.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRowbotton);\nexport default __webpack_public_path__ + \"static/media/rowbotton.c23aa99b43db1c6be2f22ff972982a56.svg\";\nexport { ForwardRef as ReactComponent };","import moment from 'moment';\r\nimport React from 'react'\r\n\r\nimport './slot.css';\r\n\r\nfunction Slot(props) {\r\n  const { time, busy } = props;\r\n  // console.log(moment(time, 'HH:mm'))\r\n  const endTime = moment(time, 'HH:mm').add(30, 'minutes').format('HH:mm');\r\n  return (\r\n    <div onClick={props.onClick} className={busy ? \"slot active\" : \"slot\"}>{`${time} - ${endTime}`}</div>\r\n  )\r\n}\r\n\r\nexport default Slot","import React, { useReducer } from 'react'\r\nimport Slot from './Slot/Slot';\r\n\r\nimport './day.css';\r\n\r\nfunction Day(props) {\r\n  const { data, setSelectedDate } = props;\r\n  const [, forceUpdate] = useReducer(x => x + 1, 0)\r\n  return (\r\n    <div className='dateTimePicker_day'>\r\n      <div className='Day__wrapperDay'>\r\n        <span className='Day__blockDayName'>{data.date.format('dd')}</span>\r\n        <span>{data.date.format('DD')}</span>\r\n      </div>\r\n      {data.schedule.map(day => { return <Slot key={day.time} onClick={() => { day.busy = !day.busy; forceUpdate(); }} busy={day.busy} time={day.time}></Slot> })}\r\n    </div>)\r\n}\r\n\r\nexport default React.memo(Day)","import moment from 'moment';\r\nimport 'moment/locale/uk';\r\nimport Day from './Day/Day';\r\nimport './dateTimePicker.css';\r\nimport { useLayoutEffect, useState } from 'react';\r\nimport { ReactComponent as RowBotton } from '../../icons/rowbotton.svg';\r\n\r\nmoment.locale('uk');\r\n\r\n\r\nconst DateTimePicker = () => {\r\n  const [nShift, setNShift] = useState(0);\r\n  const [selectedDate, setSelectedDate] = useState([]);\r\n  const dayOfYear = moment().dayOfYear() - 1;\r\n\r\n  const [activeDatas, setActiveData] = useState(retuernFinishDate());\r\n  // useLayoutEffect(() => {\r\n  //   setActiveData(activeData)\r\n  // }, [activeData])\r\n  console.log(activeDatas);\r\n  // setActiveData(activeData)\r\n  // console.log(moment().add(1, 'day').toISOString())\r\n  return (\r\n    <div className='dateTimePicker'>\r\n      <div className=\"dateTimePicker_header\">\r\n        <RowBotton className=\"dateTimePicker__arowLeft\" onClick={() => { setNShift(nShift - 1) }} />\r\n        <span className=\"dateTimePicker__year\">{activeDatas[dayOfYear + nShift].date.format(\"MMMM, YYYY\")}</span>\r\n        <RowBotton className=\"dateTimePicker__arowRight\" onClick={() => { setNShift(nShift + 1) }} />\r\n      </div>\r\n      <div className=\"dateTimePicker_schedule\">\r\n        <Day setSelectedDate={setSelectedDate} key={dayOfYear} data={activeDatas[dayOfYear + nShift]} />\r\n        <Day setSelectedDate={setSelectedDate} key={dayOfYear + 1} data={activeDatas[dayOfYear + nShift + 1]} />\r\n        <Day setSelectedDate={setSelectedDate} key={dayOfYear + 2} data={activeDatas[dayOfYear + nShift + 2]} />\r\n        <Day setSelectedDate={setSelectedDate} key={dayOfYear + 3} data={activeDatas[dayOfYear + nShift + 3]} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst retuernFinishDate = (selectedDate) => {\r\n  const activeData = {};\r\n  const year2023 = generateTimeOptionsYear(moment(), moment().add(1, 'years'));\r\n  year2023.forEach((day, index) => activeData[index] = generateTimeOptions(day));\r\n  return activeData\r\n}\r\nconst generateTimeOptions = (selectedDate) => {\r\n\r\n  const start = moment(selectedDate).startOf('day').add(10, 'hours');\r\n  const end = moment(selectedDate).startOf('day').add(19.5, 'hours');\r\n  const options = [];\r\n  while (start.isBefore(end)) {\r\n    options.push({ time: start.format('HH:mm'), reservation: false });\r\n    start.add(30, 'minutes');\r\n  }\r\n  return { date: selectedDate, schedule: options };\r\n};\r\n\r\nconst generateTimeOptionsYear = (startDateStr, endDateStr) => {\r\n  // Встановлення початкової дати\r\n  // const startDate = moment(startDateStr);\r\n\r\n  // Встановлення кінцевої дати\r\n  const endDate = moment(endDateStr);\r\n\r\n  // Створення порожнього об'єкта дат Moment\r\n  const allDays = [];\r\n\r\n  // Цикл для проходження крізь усі дати між початковою та кінцевою датами\r\n  for (var d = startDateStr; d <= endDate; d.add(1, 'days')) {\r\n    // Створення об'єкта Moment для поточної дати\r\n    var currentDay = moment(d);\r\n\r\n    allDays.push(currentDay);\r\n    // Додавання об'єкта Moment до об'єкту дат Moment\r\n    // allDays[currentDay.format('YYYY-MM-DD')] = currentDay;\r\n  }\r\n\r\n  return allDays;\r\n\r\n}\r\n\r\nexport default DateTimePicker;"],"names":["_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRowbotton","_ref","svgRef","title","titleId","props","width","height","viewBox","stroke","fill","xmlns","ref","id","d","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","time","busy","endTime","moment","add","format","_jsx","onClick","className","children","concat","Day","data","_useReducer","setSelectedDate","useReducer","x","forceUpdate","_slicedToArray","_jsxs","date","schedule","map","day","Slot","React","retuernFinishDate","selectedDate","activeData","generateTimeOptionsYear","forEach","index","generateTimeOptions","start","startOf","end","options","isBefore","push","reservation","startDateStr","endDateStr","endDate","allDays","currentDay","_useState","useState","_useState2","nShift","setNShift","_useState3","_useState4","dayOfYear","_useState5","_useState6","activeDatas","console","log","RowBotton"],"sourceRoot":""}